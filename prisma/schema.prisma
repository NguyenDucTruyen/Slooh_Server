// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// prisma\schema.prisma
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Schema

enum Quyen {
  NGUOI_DUNG
  ADMIN
}

enum TrangThai {
  HOAT_DONG
  KHOA
}

enum LoaiMa {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}

enum LoaiOAuth {
  GOOGLE
  GITHUB
}

enum VaiTroKenh {
  THANH_VIEN
  CHU_KENH
}

enum TrangThaiThanhVien {
  YEU_CAU
  THAM_GIA
}

enum HoatDongPhong {
  OFFLINE
  WAITING
  PRESENTING
}

enum LoaiTrang {
  NOI_DUNG
  CAU_HOI
}

enum Diem {
  BINH_THUONG
  GAP_DOI
  KHONG_DIEM
}

enum LoaiCauTraLoi {
  SINGLE_SELECT
  MULTI_SELECT
  TRUE_FALSE
}

enum VaiTroPhien {
  THANH_VIEN
  CHU_PHIEN
}

model NGUOIDUNG {
  maNguoiDung    String                     @id @default(uuid())
  hoTen          String
  email          String                     @unique
  matKhau        String
  anhDaiDien     String?
  quyen          Quyen                      @default(NGUOI_DUNG)
  trangThai      TrangThai                  @default(HOAT_DONG)
  daXacThucEmail Boolean                    @default(false)
  ngayTao        DateTime                   @default(now())
  ngayCapNhat    DateTime                   @updatedAt
  mas            MA[]
  oauth          OAUTH?                     @relation("NguoiDungOauth") // One-to-one relation
  kenh           THANHVIENKENH[]
  thanhVienPhien THANHVIENPHIENTRINHCHIEU[]
  baoCao         BAOCAO[]
  PHONG          PHONG[]
}

model MA {
  maMa        String   @id @default(uuid())
  maNguoiDung String
  loaiMa      LoaiMa
  ma          String
  hetHan      DateTime
  daSuDung    Boolean  @default(false)
  ngayTao     DateTime @default(now())

  nguoiDung NGUOIDUNG @relation(fields: [maNguoiDung], references: [maNguoiDung], onDelete: Cascade)
}

model OAUTH {
  maOauth     String    @id @default(uuid())
  maNguoiDung String    @unique // Enforces 1-1 relationship
  loaiOAuth   LoaiOAuth
  oauthId     String    @unique
  ma          String
  ngayTao     DateTime  @default(now())

  nguoiDung NGUOIDUNG @relation("NguoiDungOauth", fields: [maNguoiDung], references: [maNguoiDung], onDelete: Cascade)
}

model KENH {
  maKenh    String    @id @default(uuid())
  tenKenh   String
  trangThai TrangThai @default(HOAT_DONG)
  ngayTao   DateTime  @default(now())
  ngayXoa   DateTime?

  thanhVien THANHVIENKENH[]
  phong     PHONG[]
}

model THANHVIENKENH {
  maThanhVienKenh String             @id @default(uuid())
  maNguoiDung     String
  maKenh          String
  vaiTro          VaiTroKenh         @default(THANH_VIEN)
  trangThai       TrangThaiThanhVien @default(YEU_CAU)
  ngayTao         DateTime           @default(now())

  nguoiDung NGUOIDUNG @relation(fields: [maNguoiDung], references: [maNguoiDung], onDelete: Cascade)
  kenh      KENH      @relation(fields: [maKenh], references: [maKenh], onDelete: Cascade)

  @@unique([maNguoiDung, maKenh])
}

model PHONG {
  maPhong    String            @id @default(uuid())
  tenPhong   String
  moTa       String?
  maKenh     String?
  trangThai  TrangThai         @default(HOAT_DONG)
  hoatDong   HoatDongPhong     @default(OFFLINE)
  ngayTao    DateTime          @default(now())
  ngayXoa    DateTime?
  kenh       KENH?             @relation(fields: [maKenh], references: [maKenh], onDelete: SetNull)
  trangs     TRANG[]
  phienTrinh PHIENTRINHCHIEU[]
  baoCao     BAOCAO[]
  maNguoiTao String?
  nguoiTao   NGUOIDUNG?        @relation(fields: [maNguoiTao], references: [maNguoiDung])
}

model TRANG {
  maTrang         String         @id @default(uuid())
  maPhong         String
  loaiTrang       LoaiTrang
  thuTu           Int
  tieuDe          String
  hinhAnh         String?
  video           String?
  hinhNen         String?
  cachTrinhBay    String?
  canLeTieuDe     String?
  canLeNoiDung    String?
  noiDung         String?
  thoiGianGioiHan Int?
  diem            Diem           @default(BINH_THUONG)
  loaiCauTraLoi   LoaiCauTraLoi?

  phong   PHONG     @relation(fields: [maPhong], references: [maPhong], onDelete: Cascade)
  luaChon LUACHON[]

  @@unique([maPhong, thuTu])
}

model LUACHON {
  maLuaChon String  @id @default(uuid())
  maTrang   String
  noiDung   String
  ketQua    Boolean @default(false)

  trang     TRANG       @relation(fields: [maTrang], references: [maTrang], onDelete: Cascade)
  CAUTRALOI CAUTRALOI[]
}

model PHIENTRINHCHIEU {
  maPhien String   @id @default(uuid())
  maPhong String
  maPin   String   @unique
  ngayTao DateTime @default(now())

  phong     PHONG                      @relation(fields: [maPhong], references: [maPhong], onDelete: Cascade)
  thanhVien THANHVIENPHIENTRINHCHIEU[]
}

model THANHVIENPHIENTRINHCHIEU {
  maThanhVienPhien String      @id @default(uuid())
  maNguoiDung      String?
  maPhien          String
  tenThanhVien     String
  anhDaiDien       String?
  vaiTro           VaiTroPhien @default(THANH_VIEN)
  tongDiem         Int         @default(0)

  nguoiDung NGUOIDUNG?      @relation(fields: [maNguoiDung], references: [maNguoiDung], onDelete: SetNull)
  phien     PHIENTRINHCHIEU @relation(fields: [maPhien], references: [maPhien], onDelete: Cascade)
  CAUTRALOI CAUTRALOI[]

  @@unique([maPhien, maNguoiDung])
}

model CAUTRALOI {
  maCauTraLoi      String                   @id @default(uuid())
  maThanhVienPhien String
  maLuaChon        String
  thoiGian         Int
  thanhVien        THANHVIENPHIENTRINHCHIEU @relation(fields: [maThanhVienPhien], references: [maThanhVienPhien], onDelete: Cascade)
  luaChon          LUACHON                  @relation(fields: [maLuaChon], references: [maLuaChon], onDelete: Cascade)

  @@unique([maThanhVienPhien, maLuaChon])
}

model BAOCAO {
  maBaoCao    String   @id @default(uuid())
  maNguoiDung String
  maPhong     String
  noiDung     String
  hinhAnh     String?
  ngayTao     DateTime @default(now())

  nguoiDung NGUOIDUNG @relation(fields: [maNguoiDung], references: [maNguoiDung], onDelete: Cascade)
  phong     PHONG     @relation(fields: [maPhong], references: [maPhong], onDelete: Cascade)
}
